class Solution {
public:

    int count_less_than(vector<vector<int>> &matrix, int n, int m, int val){
        int count = 0;
        int row = n - 1;
        int col = 0;

        while(row >= 0 && col < m){
            if(matrix[row][col] > val) row--;
            else{
                count += (row + 1);
                col++;
            }
        }

        return count;
    }

    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int n = matrix.size();
        int m = matrix[0].size();

        int l = matrix[0][0];
        int r = matrix[n - 1][m - 1];
        int ans = -1;

        while(l <= r){
            int mid = l + (r -l)/2;

            int count = count_less_than(matrix, n, m, mid);

            if(count >= k){
                ans = mid;
                r = mid - 1;
            }else{
                l = mid + 1;
            }

        }

        return ans;
    }
};;
